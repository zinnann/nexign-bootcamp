#version: "3.9"

services:
  zookeeper:
    image: zookeeper:3.7.0
    container_name: zookeeper
    restart: always
    networks:
      - kafka-net
    ports:
      - "2181:2181"

  kafka:
    image: obsidiandynamics/kafka
    container_name: kafka
    restart: always
    networks:
      - kafka-net
    ports:
      - "9092:9092"
    environment:
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: DOCKER_INTERNAL:PLAINTEXT,DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_LISTENERS: DOCKER_INTERNAL://:29092,DOCKER_EXTERNAL://:9092
      KAFKA_ADVERTISED_LISTENERS: DOCKER_INTERNAL://kafka:29092,DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper

  kafdrop:
    image: obsidiandynamics/kafdrop
    container_name: kafdrop
    restart: always
    networks:
      - kafka-net
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka:29092"
    depends_on:
      - kafka

  database:
    image: postgres:15-alpine
    container_name: database
    ports:
      - "5438:5432"
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB: "postgres"
    healthcheck:
      test: [ "CMD", "pg_isready","-d","postgres","-U","postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-net
    volumes:
      - ./liquibase/changelog/init-db.sql:/docker-entrypoint-initdb.d/init.sql
      - ./liquibase/changelog/insert-clients.sql:/docker-entrypoint-initdb.d/insert-clients.sql
      - ./liquibase/changelog/insert-tariffs.sql:/docker-entrypoint-initdb.d/insert-tariffs.sql
      - /var/lib/postgresql/data
    restart: always

  #  liquibase:
  #    image: liquibase/liquibase:4.17.2
  #    networks:
  #      - app-net
  #    command: liquibase --driver=org.postgresql.Driver --url=jdbc:postgresql://database:5432/postgres --password=postgres --username=postgres --changelog-file=/boot/db.changelog-master.xml update
  #    volumes:
  #      - ./liquibase/changelog:/liquibase/boot/changelog
  #      - ./liquibase/changelog/db.changelog-master.xml:/liquibase/boot/db.changelog-master.xml
  #      - ./liquibase/changelog/init-db.sql:/liquibase/boot/init-db.sql
  #      - ./liquibase/changelog/insert-clients.sql:/liquibase/boot/insert-clients.sql
  #      - ./liquibase/changelog/insert-tariffs.sql:/liquibase/boot/insert-tariffs.sql
  #    depends_on:
  #      - database

  cdr:
    image: graksergey/spring-boot-cdr:latest
    restart: always
    container_name: cdr
    environment:
      BOOTSTRAP_SERVERS_CONFIG: kafka:29092
    ports:
      - "8080:8080"
    networks:
      - app-net
      - kafka-net
    depends_on:
      - kafka

  brt:
    image: graksergey/spring-boot-brt:latest
    restart: always
    container_name: brtt
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DATABASE: postgres
      POSTGRES_URL: jdbc:postgresql://database:5432/postgres
      BOOTSTRAP_SERVERS_CONFIG: kafka:29092
    ports:
      - "8081:8081"
    networks:
      - app-net
      - kafka-net
    depends_on:
      - database
      - kafka

networks:
  kafka-net:
    name: kafka-net
    driver: bridge
  app-net:
    name: app-net
    driver: bridge

